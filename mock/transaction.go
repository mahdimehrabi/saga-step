// Code generated by MockGen. DO NOT EDIT.
// Source: ./step.go
//
// Generated by this command:
//
//	mockgen -source=./step.go -destination=./mock/transaction.go
//

// Package mock_saga_step is a generated GoMock package.
package mock_saga_step

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTransaction is a mock of Transaction interface.
type MockTransaction struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionMockRecorder
	isgomock struct{}
}

// MockTransactionMockRecorder is the mock recorder for MockTransaction.
type MockTransactionMockRecorder struct {
	mock *MockTransaction
}

// NewMockTransaction creates a new mock instance.
func NewMockTransaction(ctrl *gomock.Controller) *MockTransaction {
	mock := &MockTransaction{ctrl: ctrl}
	mock.recorder = &MockTransactionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransaction) EXPECT() *MockTransactionMockRecorder {
	return m.recorder
}

// Compensate mocks base method.
func (m *MockTransaction) Compensate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Compensate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Compensate indicates an expected call of Compensate.
func (mr *MockTransactionMockRecorder) Compensate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Compensate", reflect.TypeOf((*MockTransaction)(nil).Compensate))
}

// OnError mocks base method.
func (m *MockTransaction) OnError(err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnError", err)
}

// OnError indicates an expected call of OnError.
func (mr *MockTransactionMockRecorder) OnError(err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnError", reflect.TypeOf((*MockTransaction)(nil).OnError), err)
}

// Send mocks base method.
func (m *MockTransaction) Send() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send")
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockTransactionMockRecorder) Send() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockTransaction)(nil).Send))
}
